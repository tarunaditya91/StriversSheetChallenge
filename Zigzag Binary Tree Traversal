vector<int> zigzagTreeTraversal(TreeNode<int> *root)
{
    //    Write your code here.
    
    vector<int>ans;
    
    if(root==NULL){
        return ans;
    }
    queue<TreeNode<int>*>q;
    q.push(root);
    bool flag=true;
    while(!q.empty()){
        int size=q.size();
        vector<int>level(size);
        for(int i=0;i<size;i++){
            TreeNode<int>*node=q.front();
            q.pop();
            int index=(flag)? i:(size-1-i);
            level[index]=node->data;
            if(node->left){
                q.push(node->left);
            }
            if(node->right){
                q.push(node->right);
            }

        }
        flag=!flag;
        for(auto it:level){
            ans.push_back(it);
        }

    }
    
    return ans;
}
