BFS in Graph#include <bits/stdc++.h> 
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<vector<int>>adj(vertex);
    for(int i=0;i<edges.size();i++){
         adj[edges[i].first].push_back(edges[i].second);
        adj[edges[i].second].push_back(edges[i].first);
    }
        for(int i =0;i<vertex ;i++){
        sort( adj[i].begin() , adj[i].end() ) ;
    }
    
    vector<int>vis(vertex,0);
    vis[0]=1;
    vector<int>bst;
    queue<int>q;
    q.push(0);
    while(!q.empty()){
        int node=q.front();
        q.pop();
        bst.push_back(node);
        for(auto it:adj[node]){
            if(!vis[it]){
                vis[it]=1;
                q.push(it);
            }
        }
    }
        for(int i=0;i<vis.size();i++){
        if(vis[i]==0) bst.push_back(i);
    }
    return bst;
